@page
@model AppointmentManagementSystem.Pages.Appointments.CalendarModel

@{
    ViewData["Title"] = "Appointments Calendar";
}

<h1>Appointments Calendar</h1>

<div id='calendar' style="margin: 20px;"></div>

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.css" rel="stylesheet" />
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            if (calendarEl) {
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    initialView: 'dayGridMonth',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay'
                    },
                    events: @Html.Raw(Json.Serialize(Model.Appointments.Select(a => new {
                        id = a.Id,
                        title = a.Title,
                        start = a.StartTime.ToString("s"),
                        end = a.EndTime.ToString("s")
                    }))),
                    editable: true,
                    selectable: true,
                    dateClick: function(info) {
                        var date = info.dateStr;
                        if (confirm('Do you want to create a new appointment on ' + date + '?')) {
                            window.location.href = '/Appointments/Create?date=' + date;
                        }
                    },
                    eventClick: function(info) {
                        if (confirm('Do you want to edit or delete this appointment?')) {
                            window.location.href = '/Appointments/Edit?id=' + info.event.id;
                        }
                    },
                    eventDrop: function(info) {
                        if (confirm('Do you want to update this appointment?')) {
                            var event = info.event;
                            var data = {
                                id: event.id,
                                start: event.start.toISOString(),
                                end: event.end ? event.end.toISOString() : null
                            };
                            fetch('/Appointments/Update', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            }).then(response => {
                                if (!response.ok) {
                                    alert('Failed to update appointment');
                                    info.revert();
                                }
                            });
                        } else {
                            info.revert();
                        }
                    }
                });
                calendar.render();
            }
        });
    </script>
}